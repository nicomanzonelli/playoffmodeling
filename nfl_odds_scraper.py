# -*- coding: utf-8 -*-
"""NFLoddsData.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hJOfVwqsCrPhCprr_lWCHWYDGn0Ykmce
"""

# Read in data 
import pandas as pd

url = "https://www.sportsoddshistory.com/nfl-playoffs/"
table = pd.read_html(url)

# Store data
oddsDF = table[1]
oddsDF.head()

# Fix team names (HOME)
import re
new_namesHome=  []
for string in oddsDF["Home Team (seed)"]:
  newstring = re.sub(r'[0-9|()]+', '', string)
  new_namesHome.append(newstring)
oddsDF["Home Team (seed)"] = new_namesHome

# Fix team names (AWAY)
new_namesAway=  []
for string in oddsDF["Visiting Team (seed)"]:
  newstring = re.sub(r'[0-9|()]+', '', string)
  new_namesAway.append(newstring)
oddsDF["Visiting Team (seed)"] = new_namesAway
oddsDF.head()

team_df = pd.read_csv("team_data.csv")
teams_short = team_df.team.unique()
teams_short.sort()
teams_short = list(teams_short)
print(teams_short)

oddsDF[oddsDF["Season"] > 2002]["Home Team (seed)"].unique()

oddsDF[oddsDF["Season"] > 2002]["Visiting Team (seed)"].unique()

team_trans = {'Kansas City Chiefs ': 'kan',
 'Green Bay Packers ': 'gnb',
 'New Orleans Saints ': 'nor',
 'Buffalo Bills ': 'buf',
 'Pittsburgh Steelers ': 'pit',
 'Tennessee Titans ': 'oti',
 'Washington Football Team ': 'was',
 'Seattle Seahawks ': 'sea',
 'San Francisco ers ': 'sfo',
 'Baltimore Ravens ': 'rav',
 'Philadelphia Eagles ': 'phi',
 'New England Patriots ': 'nwe',
 'Houston Texans ': 'htx',
 'Los Angeles Rams ': 'ram',
 'Chicago Bears ': 'chi',
 'Dallas Cowboys ': 'dal',
 'Minnesota Vikings ': 'min',
 'Jacksonville Jaguars ': 'jax',
 'Atlanta Falcons ': 'atl',
 'Carolina Panthers ': 'car',
 'Denver Broncos ': 'den',
 'Arizona Cardinals ': 'crd',
 'Washington Redskins ': 'was',
 'Cincinnati Bengals ': 'cin',
 'Indianapolis Colts ': 'clt',
 'New York Giants ': 'nyg',
 'San Diego Chargers ': 'sdg',
 'Miami Dolphins ': 'mia',
 'Tampa Bay Buccaneers ': 'tam',
 'St Louis Rams ': 'ram',
 'Los Angeles Chargers ': 'sdg',
 'New York Jets ': 'nyj',
 'Detroit Lions ': 'det', 
 'Oakland Raiders ': 'rai',
 'Cleveland Browns ': 'cle'}

import warnings
warnings.filterwarnings('ignore')

odds_target_years = oddsDF[oddsDF["Season"] > 2001]
odds_target_years["home_team"] = [team_trans[long_name] for long_name in list(odds_target_years["Home Team (seed)"])]
odds_target_years["away_team"] = [team_trans[long_name] for long_name in list(odds_target_years["Visiting Team (seed)"])]
odds_target_years['year'] = odds_target_years["Season"]

odds_target_years.columns

odds_target_years.drop(["Season", "Date &Day/Time", "Conf", "Home Team (seed)", "Visiting Team (seed)"], axis = 1)

home_team_df = team_df.drop(["Unnamed: 0"], axis = 1)
home_team_df.columns = 'home_' + home_team_df.columns.values
home_team_df["year"] = home_team_df["home_year"]
home_team_df.drop("home_year", axis = 1)


away_team_df = team_df.drop(["Unnamed: 0"], axis = 1)
away_team_df.columns = 'away_' + away_team_df.columns.values
away_team_df["year"] = away_team_df["away_year"]
away_team_df.drop("away_year", axis = 1)

home_set = odds_target_years.merge(home_team_df, on = ["home_team", "year"])
team_odds = home_set.merge(away_team_df, on = ["away_team", "year"])
team_odds = team_odds.drop_duplicates()

team_odds.to_csv("odds_stats.csv")